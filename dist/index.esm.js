import t from"mustache";let e=null;async function a(){if(!e)try{const t=await fetch("./config.json");e=await t.json()}catch(t){}return e}function n(){return e}class s{constructor(t,e,a="ui-component"){this.id=t,this.label=e,this.name=a,this.setTemplatePath(n().templatePath)}getRenderProperties(){return{id:this.id,label:this.label,name:this.name}}setTemplatePath(t){this.templatePath=t}async render(t){const e=await this.renderHTML();t.appendChild(e)}async renderHTML(){const e=await this.#t(this.templatePath),a=await this.getRenderProperties(),n=async function(t){const e=document.createElement("template");return e.innerHTML=t.trim(),e.content.firstChild}(t.render(e,a));return n}async#t(t){const e=await fetch(t);if(!e.ok)throw new Error(`Failed to load template: ${t}`);return await e.text()}}class r extends s{constructor(t,e,a,n="ui-input",s=()=>{}){super(t,e,n),this.value=a,this.callOnBlur=s,this.eventValueUpdate=new Event(`${t}_value-update`)}getRenderProperties(){return{...super.getRenderProperties(),value:this.value}}async render(t){await super.render(t),await this.setEventListeners()}async setEventListeners(){const t=document.getElementById(this.id);t.addEventListener("blur",(()=>{this.value=t.value,this.callOnBlur(),console.log(`Text UI Component now has value: ${this.value}`)}))}}class i extends r{constructor(t,e,a,n="ui-textfield",s=()=>{}){super(t,e,a,n,s),this.templatePath+="input/textfield.html",this.setTemplatePath(templatePath)}}export{i as UiTextField,n as getConfig,a as loadConfig};
//# sourceMappingURL=index.esm.js.map
