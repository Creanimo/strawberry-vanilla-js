{"version":3,"file":"index.esm.js","sources":["../src/tools/initConfig.mjs","../src/components/ui-component.mjs","../src/tools/htmlStringToElement.mjs","../src/components/input/ui-input.mjs","../src/components/input/textfield/ui-textfield.mjs"],"sourcesContent":["let config = null;\n\nasync function loadConfig() {\n    if (!config) {\n        try {\n            const response = await fetch('./config.json');\n            config = await response.json();\n        } catch (error) {\n            // console.error('Error loading config:', error);\n        }\n    }\n    return config;\n}\n\nfunction getConfig() {\n    return config;\n}\n\nexport { loadConfig, getConfig };\n","import Mustache from \"mustache\";\nimport { loadConfig, getConfig } from \"../tools/initConfig.mjs\";\nimport { htmlStringToElement } from \"../tools/htmlStringToElement.mjs\";\n\n/**\n * Base class for UI components.\n */\nclass UiComponent {\n    /**\n     * Creates an instance of UiComponent.\n     * @param {string} id - The unique identifier for the component.\n     * @param {string} label - The label for the component.\n     */\n    constructor(id, label, name = \"ui-component\") {\n        this.id = id;\n        this.label = label;\n        this.name = name\n\n        this.setTemplatePath(getConfig().templatePath);\n    }\n\n    /**\n     * Gets the properties for rendering the component.\n     * @returns {Object} The properties for rendering.\n     */\n    getRenderProperties() {\n        return {\n            id: this.id,\n            label: this.label,\n            name: this.name,\n        };\n    }\n\n    /**\n     * Sets the template path for the component.\n     * @param {string} path - The path to the template file.\n     */\n    setTemplatePath(path) { this.templatePath = path; }\n\n    /**\n     * Renders the component using the specified template.\n     * @returns {Promise<Node>} The rendered HTML string.\n     */\n    async render(targetNode) {\n        const renderedHtml = await this.renderHTML();\n        targetNode.appendChild(renderedHtml);\n    }\n\n    async renderHTML() {\n        const template = await this.#loadTemplate(this.templatePath);\n        const renderProps = await this.getRenderProperties();\n        const htmlStr = Mustache.render(template, renderProps); \n        const renderedHTML = htmlStringToElement(htmlStr);\n        \n        return renderedHTML;\n    }\n\n    /**\n     * Loads the template from the specified path.\n     * @param {string} templatePath - The path to the template file.\n     * @returns {Promise<string>} The template content.\n     * @throws {Error} If the template cannot be loaded.\n     * @private\n     */\n    async #loadTemplate(templatePath) {\n        const response = await fetch(templatePath);\n        if (!response.ok) {\n            throw new Error(`Failed to load template: ${templatePath}`);\n        }\n        return await response.text();\n    }\n}\n\nexport default UiComponent;\n","/**\n * Convert a html string to DOM\n * @param {string} htmlString \n * @returns {Node}\n */\nasync function htmlStringToElement(htmlString) {\n    const template = document.createElement('template');\n    template.innerHTML = htmlString.trim();\n    const element = template.content.firstChild;\n    return element;\n}\n\nexport { htmlStringToElement }\n","import UiComponent from \"../ui-component.mjs\";\n\nclass UiInput extends UiComponent {\n    /**\n     * \n     * @param {*} id \n     * @param {*} label \n     * @param {*} value \n     * @param {*} name \n     * @param {Function} callOnBlur \n     */\n    constructor(id,\n                label,\n                value,\n                name = \"ui-input\",\n                callOnBlur = (() => { return undefined; })) {\n        super(id, label, name)\n        this.value = value;\n        this.callOnBlur = callOnBlur;\n        this.eventValueUpdate = new Event(`${id}_value-update`);\n    }\n\n    getRenderProperties() {\n        return {\n            ...super.getRenderProperties(),\n            value: this.value,\n        };\n    }\n\n    async render(targetNode) {\n        await super.render(targetNode);\n        await this.setEventListeners();\n    }\n\n    async setEventListeners() {\n        const inputElement = document.getElementById(this.id);\n\n        const onBlur = () => {\n            this.value = inputElement.value;\n            this.callOnBlur();\n            console.log(`Text UI Component now has value: ${this.value}`);\n        }\n        inputElement.addEventListener(\"blur\", onBlur)\n    }\n}\n\nexport default UiInput;\n","import UiInput from \"../ui-input.mjs\";\n\nclass UiTextField extends UiInput {\n    /**\n     * Single Line Text Field\n     * @param {string} id \n     * @param {string} label \n     * @param {string} value \n     * @param {string} templatePath - The path to the template file.\n     */\n    constructor(id,\n                label,\n                value,\n                name = \"ui-textfield\",\n                callOnBlur = (() => { return undefined; })) {\n        super(id, label, value, name, callOnBlur);\n        this.templatePath += 'input/textfield.html';\n        this.setTemplatePath(templatePath);\n    }\n}\n\nexport default UiTextField;\n"],"names":["config","async","loadConfig","response","fetch","json","error","getConfig","UiComponent","constructor","id","label","name","this","setTemplatePath","templatePath","getRenderProperties","path","render","targetNode","renderedHtml","renderHTML","appendChild","template","loadTemplate","renderProps","renderedHTML","htmlString","document","createElement","innerHTML","trim","content","firstChild","htmlStringToElement","Mustache","ok","Error","text","UiInput","value","callOnBlur","super","eventValueUpdate","Event","setEventListeners","inputElement","getElementById","addEventListener","console","log","UiTextField"],"mappings":"wBAAA,IAAIA,EAAS,KAEbC,eAAeC,IACX,IAAKF,EACD,IACI,MAAMG,QAAiBC,MAAM,iBAC7BJ,QAAeG,EAASE,MAC3B,CAAC,MAAOC,GAEjB,CAEI,OAAON,CACX,CAEA,SAASO,IACL,OAAOP,CACX,CCTA,MAAMQ,EAMF,WAAAC,CAAYC,EAAIC,EAAOC,EAAO,gBAC1BC,KAAKH,GAAKA,EACVG,KAAKF,MAAQA,EACbE,KAAKD,KAAOA,EAEZC,KAAKC,gBAAgBP,IAAYQ,aACzC,CAMI,mBAAAC,GACI,MAAO,CACHN,GAAIG,KAAKH,GACTC,MAAOE,KAAKF,MACZC,KAAMC,KAAKD,KAEvB,CAMI,eAAAE,CAAgBG,GAAQJ,KAAKE,aAAeE,CAAK,CAMjD,YAAMC,CAAOC,GACT,MAAMC,QAAqBP,KAAKQ,aAChCF,EAAWG,YAAYF,EAC/B,CAEI,gBAAMC,GACF,MAAME,QAAiBV,MAAKW,EAAcX,KAAKE,cACzCU,QAAoBZ,KAAKG,sBAEzBU,EC/CdzB,eAAmC0B,GAC/B,MAAMJ,EAAWK,SAASC,cAAc,YAGxC,OAFAN,EAASO,UAAYH,EAAWI,OAChBR,EAASS,QAAQC,UAErC,CD0C6BC,CADLC,EAASjB,OAAOK,EAAUE,IAG1C,OAAOC,CACf,CASI,OAAMF,CAAcT,GAChB,MAAMZ,QAAiBC,MAAMW,GAC7B,IAAKZ,EAASiC,GACV,MAAM,IAAIC,MAAM,4BAA4BtB,KAEhD,aAAaZ,EAASmC,MAC9B,EEpEA,MAAMC,UAAgB/B,EASlB,WAAAC,CAAYC,EACAC,EACA6B,EACA5B,EAAO,WACP6B,OAAyC,GACjDC,MAAMhC,EAAIC,EAAOC,GACjBC,KAAK2B,MAAQA,EACb3B,KAAK4B,WAAaA,EAClB5B,KAAK8B,iBAAmB,IAAIC,MAAM,GAAGlC,iBAC7C,CAEI,mBAAAM,GACI,MAAO,IACA0B,MAAM1B,sBACTwB,MAAO3B,KAAK2B,MAExB,CAEI,YAAMtB,CAAOC,SACHuB,MAAMxB,OAAOC,SACbN,KAAKgC,mBACnB,CAEI,uBAAMA,GACF,MAAMC,EAAelB,SAASmB,eAAelC,KAAKH,IAOlDoC,EAAaE,iBAAiB,QALf,KACXnC,KAAK2B,MAAQM,EAAaN,MAC1B3B,KAAK4B,aACLQ,QAAQC,IAAI,oCAAoCrC,KAAK2B,QAAQ,GAGzE,ECzCA,MAAMW,UAAoBZ,EAQtB,WAAA9B,CAAYC,EACAC,EACA6B,EACA5B,EAAO,eACP6B,OAAyC,GACjDC,MAAMhC,EAAIC,EAAO6B,EAAO5B,EAAM6B,GAC9B5B,KAAKE,cAAgB,uBACrBF,KAAKC,gBAAgBC,aAC7B"}